travis-run
==========

*travis-run* creates virtual machines resembling the build environment provided
by the *travis-ci.org* continuous integration service. This is so one can run
and debug builds locally, which should take most of the guesswork out of fixing
problems that only occur on travis-ci but not on the developer's machine. To do
this, we use the same chef-solo cookbooks used by travis-ci and generate the
script to drive the build from the .travis.yml file using the ruby libraries
published by them.

Installation
============

The simplest way to install *travis-run* is to just `git clone
https://github.com/DanielG/travis-run.git` and add the resulting directory to
your *PATH*.

If you want to get more fancy the following installation methods are also
available:

Debian
------

```
$ git clone https://github.com/DanielG/travis-run.git
$ cd travis-run
$ debuild -uc -us
# dpkg -i ../travis-run_*.deb
```

OS X
----

```
$ brew tap andy-morris/homebrew-extra
$ brew install travis-run
$ boot2docker init
```

Before you use travis-run you have to run `boot2docker up` and export
`DOCKER_HOST` as instructed.

Usage
=====

- Create a virtual machine: `travis-run create`

  You should run this in your project directory.

  This will create a directory `.travis-run/` that will contain a *Dockerfile*
  which you may modify and commit to version control.

- Run your builds locally: `travis-run`

  This will create a new docker container, copy the build directory into the
  container and execute the build as it would be on travis-ci. Different
  configurations (i.e. different runtime versions/`env` variables) will be run
  one after another.


Man Page
========
